#+STARTUP: indent
* Build env
#+begin_src shell
docker-compose build
#+end_src

* Start a new rails app
Open a bash session by Docker env including port mappings
#+begin_src shell
docker-compose run --name rails_demo --service-ports rails bash
#OR
./start_rails_env.sh
#+end_src

Create new app
#+begin_src shell
rails new demo
#+end_src

Start
#+begin_src shell
cd demo
rails s
#+end_src

Open http://localhost:3000

* Demo
** Add a static page to /public
Go and see static pages in =materials/01-static-pages/=

Add to Rails app by copying all from =materials/01-static-pages/= to rails =/public= folder

#+begin_src shell
# stand at demo rails folder, outside docker env
copy -r ../../materials/01-static-pages/* public/
#+end_src

** Create a static view without data

#+begin_src shell
rails g controller Store list
#+end_src

Go to [[http://localhost:3000/store/list]]

open file =app/views/store/list.html.erb=

#+begin_src shell
cp public/product-list.html app/views/store/list.html.erb
#+end_src

Need to link asset files to get with =store/= path

#+begin_src shell
ln -s $(pwd)/public/ public/store
#+end_src

Reload =store/list= page

** Config root path to =store/list=
Go to =config/routes=
Add this line
#+begin_src ruby
root to: 'store#list'
#+end_src

** Scaffold a model for actions
#+begin_src shell
rails g scaffold Product name:string category:string image_url:string desc:text price:float
rake db:migrate
rails s
#+end_src

Open http://localhost:3000/products

Create a new sample item.

Show around products CRUD, view the code, routes

** Add data to static view
Go to =app/views/store/list.html.erb=

Go to section =<!-- Start Best Seller -->=

Add this block inside =div#row=

#+begin_src html
<% @products.each do |product| %>
  <div class="col-md-6 col-lg-4">
    <div class="card text-center card-product">
      <div class="card-product__img">
        <%= image_tag(product.image_url, class: "card-img") %>
        <ul class="card-product__imgOverlay">
          <li><button><i class="ti-search"></i></button></li>
          <li><button><i class="ti-shopping-cart"></i></button></li>
          <li><button><i class="ti-heart"></i></button></li>
        </ul>
      </div>
      <div class="card-body">
        <p>Accessories</p>
        <h4 class="card-product__title"><a href="#">
          <%= product.name %>
        </a></h4>
        <p class="card-product__price">
          <%= product.price %>
        </p>
      </div>
    </div>
  </div>
<% end %>
#+end_src

Go to =store/list= to see result

** Add seed.rb data

Go to =db/seed.rb=
Add these lines

#+begin_src ruby
Product.create!(
  name: 'Toothpaste cream',
  category: 'Health',
  image_url: '/img/product/product2.png',
  desc: 'This is test item'
)

Product.create!(
  name: 'Super Flash Light',
  category: 'Household',
  image_url: '/img/product/product3.png',
  desc: 'This is test item'
)
#+end_src

Run
#+begin_src shell
rake db:seed
#+end_src

Go to =store/list= to see result

* NOTE about default root user
Because Docker env uses root as default user, so all generated files will be created under root permissions.
We should ~chown~ to have ability editing files outside container, with host's editor/IDE

#+begin_src shell
# From host terminal
sudo chown -R $USER:$USER demo

# Or inside docker bash env
chown -R 1000:1000 demo # 1000 is default user ID on Ubuntu, replace it with yours
#+end_src
